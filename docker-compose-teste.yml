version: '3.7'  
  
services:  
  pg:  
    image: bitnami/postgresql:latest  
    ports:  
      - '5432:5432'  
    environment:  
      - POSTGRES_USER=docker  
      - POSTGRES_PASSWORD=docker  
      - POSTGRES_DB=next-saas  
    networks:
      - network
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  back:  
    container_name: back  
    build:  
      context: .  
      dockerfile: Dockerfile.prod
    environment:  
      - DATABASE_URL=postgresql://docker:docker@pg:5432/next-saas?schema=public  
      - NEXT_PUBLIC_API_URL=http://back:3333 
      - JWT_SECRET=my-jwt-secret  
      - GITHUB_OAUTH_CLIENT_ID=123  
      - GITHUB_OAUTH_CLIENT_SECRET=123  
      - GITHUB_OAUTH_CLIENT_REDIRECT_URI=http://front:3000/back/auth/callback  
    ports:  
      - 3333:3333  
    volumes:
      - ./apps/api:/app/apps/api:ro
      - /app/apps/api/node_modules  
    command: sh -c "until pg_isready -h pg -p 5432; do echo waiting for database; sleep 2; done && cd /app/apps/api && pnpm prisma generate && pnpm run db:migrate && pnpm run start" 
    depends_on:  
      - pg 
    networks: 
      - network 
  
  front:  
    container_name: front  
    build:  
      context: .  
      dockerfile: Dockerfile.prod  
    environment:  
      - DATABASE_URL=postgresql://docker:docker@pg:5432/next-saas?schema=public  
      - NEXT_PUBLIC_API_URL=http://back:3333 
      - JWT_SECRET=my-jwt-secret  
      - GITHUB_OAUTH_CLIENT_ID=123  
      - GITHUB_OAUTH_CLIENT_SECRET=123  
      - GITHUB_OAUTH_CLIENT_REDIRECT_URI=http://front:3000/back/auth/callback 
    ports:  
      - 3000:3000  
    volumes:
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules  
    command: sh -c "cd /app/apps/web && pnpm run build && pnpm run start"  
    depends_on:  
      - back 
    networks: 
      - network 

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/crtsnginx.crt:/etc/nginx/ssl/crtsnginx.crt
      - ./ssl/kesnginx.key:/etc/nginx/ssl/kesnginx.key  
    ports:
      - 80:80
      - 443:443
    networks:
      - network
    depends_on:
      - front
      - back  
 
networks: 
  network: 
    driver: bridge

volumes:
  pgdata: